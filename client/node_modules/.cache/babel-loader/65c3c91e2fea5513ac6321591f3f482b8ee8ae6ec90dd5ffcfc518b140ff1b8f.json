{"ast":null,"code":"var _jsxFileName = \"/Users/jonathancook/Desktop/Research/dep-graph/src/components/GraphDisplay.js\",\n  _s = $RefreshSig$();\n// GraphDisplay.js\n\nimport React, { useEffect, useCallback, useRef, useState } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, useReactFlow } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { applyStyles } from '../utils/GraphUtils';\nimport ace from 'ace-builds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphDisplay = ({\n  nodes: initialNodes,\n  edges: initialEdges,\n  order,\n  editorRef,\n  resetGraphColors\n}) => {\n  _s();\n  const [nodes, setNodesState, onNodesChange] = useNodesState([]);\n  const [edges, setEdgesState, onEdgesChange] = useEdgesState([]);\n  const {\n    fitView\n  } = useReactFlow();\n  const animationTimeoutRef = useRef([]);\n  const [coloringStarted, setColoringStarted] = useState(false);\n  const markerIdsRef = useRef([]);\n  const colorClassesRef = useRef(new Map());\n  const createColorClass = color => {\n    if (!colorClassesRef.current.has(color)) {\n      const className = `highlight-${color.replace('#', '')}`;\n      const style = document.createElement('style');\n      style.innerHTML = `\n        .${className} {\n          position: absolute;\n          background: ${color}40; \n          z-index: 20;\n        }\n      `;\n      document.head.appendChild(style);\n      colorClassesRef.current.set(color, className);\n    }\n    return colorClassesRef.current.get(color);\n  };\n  const highlightCodeLines = useCallback((lineNumbers, color) => {\n    if (editorRef.current && editorRef.current.editor) {\n      const session = editorRef.current.editor.getSession();\n      const Range = ace.require('ace/range').Range;\n      const colorClass = createColorClass(color);\n      lineNumbers.forEach(line => {\n        const markerId = session.addMarker(new Range(line - 1, 0, line - 1, 1), colorClass, 'fullLine');\n        markerIdsRef.current.push(markerId);\n      });\n    }\n  }, [editorRef]);\n  useEffect(() => {\n    if (initialNodes.length && initialEdges.length) {\n      const {\n        styledNodes,\n        styledEdges\n      } = applyStyles(initialNodes, initialEdges);\n      setNodesState(styledNodes);\n      setEdgesState(styledEdges);\n      fitView();\n    }\n  }, [initialNodes, initialEdges, setNodesState, setEdgesState, fitView]);\n  const runColorAnimation = useCallback(() => {\n    if (!order || !order.length) return;\n    animationTimeoutRef.current.forEach(clearTimeout);\n    animationTimeoutRef.current = [];\n    let delay = 0;\n    order.forEach(([id, color], index) => {\n      animationTimeoutRef.current.push(setTimeout(() => {\n        setNodesState(nds => nds.map(node => {\n          if (node.id === id) {\n            highlightCodeLines(node.code_lines || [], color);\n            return {\n              ...node,\n              style: {\n                ...node.style,\n                background: color\n              }\n            };\n          }\n          return node;\n        }));\n        setEdgesState(eds => eds.map(edge => {\n          if (edge.id === id) {\n            return {\n              ...edge,\n              animated: true,\n              style: {\n                ...edge.style,\n                stroke: color,\n                strokeWidth: 6\n              }\n            };\n          }\n          return edge;\n        }));\n      }, delay));\n      delay += 500;\n    });\n  }, [order, setNodesState, setEdgesState, highlightCodeLines]);\n  useEffect(() => {\n    if (nodes.length && edges.length && !coloringStarted) {\n      runColorAnimation();\n      setColoringStarted(true);\n    }\n  }, [nodes, edges, runColorAnimation, coloringStarted]);\n\n  // Removed \"resetGraphColors\" button from component UI\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-display\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphDisplay, \"iwjA+29wedYAgJw9oQUZxefN9JM=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n});\n_c = GraphDisplay;\nexport default GraphDisplay;\nvar _c;\n$RefreshReg$(_c, \"GraphDisplay\");","map":{"version":3,"names":["React","useEffect","useCallback","useRef","useState","ReactFlow","useNodesState","useEdgesState","useReactFlow","applyStyles","ace","jsxDEV","_jsxDEV","GraphDisplay","nodes","initialNodes","edges","initialEdges","order","editorRef","resetGraphColors","_s","setNodesState","onNodesChange","setEdgesState","onEdgesChange","fitView","animationTimeoutRef","coloringStarted","setColoringStarted","markerIdsRef","colorClassesRef","Map","createColorClass","color","current","has","className","replace","style","document","createElement","innerHTML","head","appendChild","set","get","highlightCodeLines","lineNumbers","editor","session","getSession","Range","require","colorClass","forEach","line","markerId","addMarker","push","length","styledNodes","styledEdges","runColorAnimation","clearTimeout","delay","id","index","setTimeout","nds","map","node","code_lines","background","eds","edge","animated","stroke","strokeWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonathancook/Desktop/Research/dep-graph/src/components/GraphDisplay.js"],"sourcesContent":["// GraphDisplay.js\n\nimport React, { useEffect, useCallback, useRef, useState } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, useReactFlow } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { applyStyles } from '../utils/GraphUtils';\nimport ace from 'ace-builds';\n\nconst GraphDisplay = ({ nodes: initialNodes, edges: initialEdges, order, editorRef, resetGraphColors }) => {\n  const [nodes, setNodesState, onNodesChange] = useNodesState([]);\n  const [edges, setEdgesState, onEdgesChange] = useEdgesState([]);\n  const { fitView } = useReactFlow();\n  const animationTimeoutRef = useRef([]);\n  const [coloringStarted, setColoringStarted] = useState(false);\n  const markerIdsRef = useRef([]); \n  const colorClassesRef = useRef(new Map()); \n\n  const createColorClass = (color) => {\n    if (!colorClassesRef.current.has(color)) {\n      const className = `highlight-${color.replace('#', '')}`;\n      const style = document.createElement('style');\n      style.innerHTML = `\n        .${className} {\n          position: absolute;\n          background: ${color}40; \n          z-index: 20;\n        }\n      `;\n      document.head.appendChild(style);\n      colorClassesRef.current.set(color, className);\n    }\n    return colorClassesRef.current.get(color);\n  };\n\n  const highlightCodeLines = useCallback((lineNumbers, color) => {\n    if (editorRef.current && editorRef.current.editor) {\n      const session = editorRef.current.editor.getSession();\n      const Range = ace.require('ace/range').Range;\n  \n      const colorClass = createColorClass(color);\n  \n      lineNumbers.forEach(line => {\n        const markerId = session.addMarker(\n          new Range(line - 1, 0, line - 1, 1),\n          colorClass,\n          'fullLine'\n        );\n        markerIdsRef.current.push(markerId); \n      });\n    }\n  }, [editorRef]);\n\n  useEffect(() => {\n    if (initialNodes.length && initialEdges.length) {\n      const { styledNodes, styledEdges } = applyStyles(initialNodes, initialEdges);\n      setNodesState(styledNodes);\n      setEdgesState(styledEdges);\n      fitView();\n    }\n  }, [initialNodes, initialEdges, setNodesState, setEdgesState, fitView]);\n\n  const runColorAnimation = useCallback(() => {\n    if (!order || !order.length) return;\n\n    animationTimeoutRef.current.forEach(clearTimeout);\n    animationTimeoutRef.current = [];\n\n    let delay = 0;\n\n    order.forEach(([id, color], index) => {\n      animationTimeoutRef.current.push(\n        setTimeout(() => {\n          setNodesState((nds) =>\n            nds.map((node) => {\n              if (node.id === id) {\n                highlightCodeLines(node.code_lines || [], color);\n                return {\n                  ...node,\n                  style: {\n                    ...node.style,\n                    background: color,\n                  },\n                };\n              }\n              return node;\n            })\n          );\n\n          setEdgesState((eds) =>\n            eds.map((edge) => {\n              if (edge.id === id) {\n                return {\n                  ...edge,\n                  animated: true,\n                  style: {\n                    ...edge.style,\n                    stroke: color,\n                    strokeWidth: 6,\n                  },\n                };\n              }\n              return edge;\n            })\n          );\n        }, delay)\n      );\n\n      delay += 500;\n    });\n  }, [order, setNodesState, setEdgesState, highlightCodeLines]);\n\n  useEffect(() => {\n    if (nodes.length && edges.length && !coloringStarted) {\n      runColorAnimation();\n      setColoringStarted(true);\n    }\n  }, [nodes, edges, runColorAnimation, coloringStarted]);\n\n  // Removed \"resetGraphColors\" button from component UI\n\n  return (\n    <div className=\"graph-display\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        fitView\n      />\n    </div>\n  );\n};\n\nexport default GraphDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}