{"ast":null,"code":"var _jsxFileName = \"/Users/jonathancook/Desktop/Research/dep-graph/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\n// CodeEditor.js\nimport React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  code,\n  setCode,\n  editorRef,\n  onProcessCode\n}) => {\n  _s();\n  // State for the two tabs' content\n  const [buffers, setBuffers] = useState({\n    Original: code,\n    Decomposed: ''\n  });\n\n  // Track the currently active tab\n  const [activeTab, setActiveTab] = useState('Original');\n\n  // Load initial code into the Original tab buffer when the component mounts\n  useEffect(() => {\n    setBuffers(prevBuffers => ({\n      ...prevBuffers,\n      Original: code\n    }));\n  }, [code]);\n\n  // Update Ace editor content when switching tabs\n  useEffect(() => {\n    if (editorRef.current && editorRef.current.editor) {\n      editorRef.current.editor.setValue(buffers[activeTab], -1);\n    }\n  }, [activeTab, buffers, editorRef]);\n\n  // Handle code change in the currently active tab\n  const handleCodeChange = newCode => {\n    setBuffers(prevBuffers => ({\n      ...prevBuffers,\n      [activeTab]: newCode\n    }));\n    if (activeTab === 'Original') {\n      setCode(newCode); // Keep the main code state updated with the Original tab\n    }\n  };\n\n  // Populate Decomposed tab content from `App.js` when the process button is clicked\n  useEffect(() => {\n    if (onProcessCode) {\n      const decomposedContent = `# Processed code\\n${buffers.Original}`; // Example transformation\n      setBuffers(prevBuffers => ({\n        ...prevBuffers,\n        Decomposed: decomposedContent\n      }));\n    }\n  }, [onProcessCode, buffers.Original]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: ['Original', 'Decomposed'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(tab),\n        style: {\n          padding: '10px',\n          margin: '0 5px',\n          backgroundColor: activeTab === tab ? '#007BFF' : '#ccc',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: tab\n      }, tab, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      ref: editorRef,\n      mode: \"python\",\n      theme: \"monokai\",\n      name: \"code_editor\",\n      onChange: handleCodeChange,\n      value: buffers[activeTab],\n      width: \"100%\",\n      height: \"100%\",\n      fontSize: 14,\n      setOptions: {\n        showLineNumbers: true,\n        tabSize: 4,\n        useWorker: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"cx1nHjpgWCICvbIP5DsKxiVDqvY=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","AceEditor","jsxDEV","_jsxDEV","CodeEditor","code","setCode","editorRef","onProcessCode","_s","buffers","setBuffers","Original","Decomposed","activeTab","setActiveTab","prevBuffers","current","editor","setValue","handleCodeChange","newCode","decomposedContent","children","style","marginBottom","map","tab","onClick","padding","margin","backgroundColor","color","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","ref","mode","theme","name","onChange","value","width","height","fontSize","setOptions","showLineNumbers","tabSize","useWorker","_c","$RefreshReg$"],"sources":["/Users/jonathancook/Desktop/Research/dep-graph/src/components/CodeEditor.js"],"sourcesContent":["// CodeEditor.js\nimport React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nconst CodeEditor = ({ code, setCode, editorRef, onProcessCode }) => {\n  // State for the two tabs' content\n  const [buffers, setBuffers] = useState({\n    Original: code,\n    Decomposed: '',\n  });\n\n  // Track the currently active tab\n  const [activeTab, setActiveTab] = useState('Original');\n\n  // Load initial code into the Original tab buffer when the component mounts\n  useEffect(() => {\n    setBuffers((prevBuffers) => ({ ...prevBuffers, Original: code }));\n  }, [code]);\n\n  // Update Ace editor content when switching tabs\n  useEffect(() => {\n    if (editorRef.current && editorRef.current.editor) {\n      editorRef.current.editor.setValue(buffers[activeTab], -1);\n    }\n  }, [activeTab, buffers, editorRef]);\n\n  // Handle code change in the currently active tab\n  const handleCodeChange = (newCode) => {\n    setBuffers((prevBuffers) => ({\n      ...prevBuffers,\n      [activeTab]: newCode,\n    }));\n    if (activeTab === 'Original') {\n      setCode(newCode); // Keep the main code state updated with the Original tab\n    }\n  };\n\n  // Populate Decomposed tab content from `App.js` when the process button is clicked\n  useEffect(() => {\n    if (onProcessCode) {\n      const decomposedContent = `# Processed code\\n${buffers.Original}`; // Example transformation\n      setBuffers((prevBuffers) => ({\n        ...prevBuffers,\n        Decomposed: decomposedContent,\n      }));\n    }\n  }, [onProcessCode, buffers.Original]);\n\n  return (\n    <div>\n      {/* Tab Navigation */}\n      <div style={{ marginBottom: '10px' }}>\n        {['Original', 'Decomposed'].map((tab) => (\n          <button\n            key={tab}\n            onClick={() => setActiveTab(tab)}\n            style={{\n              padding: '10px',\n              margin: '0 5px',\n              backgroundColor: activeTab === tab ? '#007BFF' : '#ccc',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            {tab}\n          </button>\n        ))}\n      </div>\n\n      {/* Ace Editor */}\n      <AceEditor\n        ref={editorRef}\n        mode=\"python\"\n        theme=\"monokai\"\n        name=\"code_editor\"\n        onChange={handleCodeChange}\n        value={buffers[activeTab]}\n        width=\"100%\"\n        height=\"100%\"\n        fontSize={14}\n        setOptions={{\n          showLineNumbers: true,\n          tabSize: 4,\n          useWorker: false,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}