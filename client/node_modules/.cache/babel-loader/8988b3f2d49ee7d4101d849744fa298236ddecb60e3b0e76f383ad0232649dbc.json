{"ast":null,"code":"var _jsxFileName = \"/Users/jonathancook/Desktop/Research/dep-graph/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport CodeEditor from './components/CodeEditor';\nimport GraphDisplay from './components/GraphDisplay';\nimport { ReactFlowProvider } from 'reactflow';\nimport { initialNodes, initialEdges, order } from './graphElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [buffers, setBuffers] = useState({\n    Original: '# Write your Python code here\\n',\n    Decomposed: ''\n  });\n  const [activeTab, setActiveTab] = useState('Original'); // Track active tab\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const editorRef = useRef(null);\n\n  // Toggle process signal to update decomposed code\n  const handleProcessCode = () => {\n    const decomposedContent = `# Decomposed code based on ${buffers.Original}`;\n    setBuffers(prevBuffers => ({\n      ...prevBuffers,\n      Decomposed: decomposedContent\n    }));\n\n    // Set nodes and edges for development purposes\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n    setActiveTab('Decomposed'); // Switch to Decomposed tab after processing\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: handleProcessCode,\n        children: \"Process Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), ['Original', 'Decomposed'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(tab),\n        style: {\n          padding: '10px',\n          margin: '0 5px',\n          backgroundColor: activeTab === tab ? '#007BFF' : '#ccc',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: tab\n      }, tab, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(CodeEditor, {\n        code: buffers[activeTab] // Pass active tab's content\n        ,\n        setCode: newCode => setBuffers(prevBuffers => ({\n          ...prevBuffers,\n          [activeTab]: newCode\n        })),\n        editorRef: editorRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-section\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n        children: /*#__PURE__*/_jsxDEV(GraphDisplay, {\n          nodes: nodes,\n          edges: edges,\n          order: order,\n          editorRef: editorRef,\n          setNodes: setNodes,\n          setEdges: setEdges\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AbhjWba/RXZeeFiyKWmU0/zHTZk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","CodeEditor","GraphDisplay","ReactFlowProvider","initialNodes","initialEdges","order","jsxDEV","_jsxDEV","App","_s","buffers","setBuffers","Original","Decomposed","activeTab","setActiveTab","nodes","setNodes","edges","setEdges","editorRef","handleProcessCode","decomposedContent","prevBuffers","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","tab","style","padding","margin","backgroundColor","color","border","borderRadius","cursor","code","setCode","newCode","_c","$RefreshReg$"],"sources":["/Users/jonathancook/Desktop/Research/dep-graph/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport CodeEditor from './components/CodeEditor';\nimport GraphDisplay from './components/GraphDisplay';\nimport { ReactFlowProvider } from 'reactflow';\nimport { initialNodes, initialEdges, order } from './graphElements';\n\nfunction App() {\n  const [buffers, setBuffers] = useState({\n    Original: '# Write your Python code here\\n',\n    Decomposed: '',\n  });\n  const [activeTab, setActiveTab] = useState('Original'); // Track active tab\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const editorRef = useRef(null);\n\n  // Toggle process signal to update decomposed code\n  const handleProcessCode = () => {\n    const decomposedContent = `# Decomposed code based on ${buffers.Original}`;\n    setBuffers((prevBuffers) => ({\n      ...prevBuffers,\n      Decomposed: decomposedContent,\n    }));\n\n    // Set nodes and edges for development purposes\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n    setActiveTab('Decomposed'); // Switch to Decomposed tab after processing\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"editor-section\">\n      <button className=\"process-button\" onClick={handleProcessCode}>\n          Process Code\n        </button>\n        {['Original', 'Decomposed'].map((tab) => (\n          <button\n            key={tab}\n            onClick={() => setActiveTab(tab)}\n            style={{\n              padding: '10px',\n              margin: '0 5px',\n              backgroundColor: activeTab === tab ? '#007BFF' : '#ccc',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            {tab}\n          </button>\n        ))}\n        <CodeEditor\n          code={buffers[activeTab]} // Pass active tab's content\n          setCode={(newCode) =>\n            setBuffers((prevBuffers) => ({\n              ...prevBuffers,\n              [activeTab]: newCode,\n            }))\n          }\n          editorRef={editorRef}\n        />\n      </div>\n\n      <div className=\"graph-section\">\n        <ReactFlowProvider>\n          <GraphDisplay\n            nodes={nodes}\n            edges={edges}\n            order={order}\n            editorRef={editorRef} \n            setNodes={setNodes}\n            setEdges={setEdges}\n          />\n        </ReactFlowProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}