{"ast":null,"code":"var _jsxFileName = \"/Users/jonathancook/Desktop/Research/dep-graph/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditorWithTabs = () => {\n  _s();\n  const editorRef = useRef(null);\n\n  // State for the content of the two tabs\n  const [buffers, setBuffers] = useState({\n    Original: '',\n    Decomposed: ''\n  });\n\n  // Track the currently active tab\n  const [activeTab, setActiveTab] = useState('Original');\n\n  // Load code content from JSON on component mount\n  useEffect(() => {\n    fetch('/demoCode.json').then(response => response.json()).then(data => {\n      setBuffers({\n        Original: data.Original,\n        Decomposed: '' // Initially empty; will be populated on processing\n      });\n    }).catch(error => console.error('Error loading demo code:', error));\n  }, []);\n\n  // Handle code change for the active tab\n  const handleCodeChange = newCode => {\n    setBuffers(prevBuffers => ({\n      ...prevBuffers,\n      [activeTab]: newCode\n    }));\n  };\n\n  // Handle Process Code button to populate the Decomposed tab\n  const handleProcessCode = () => {\n    setBuffers(prevBuffers => ({\n      ...prevBuffers,\n      Decomposed: buffers.Decomposed || buffers.Original // Use Decomposed content from JSON\n    }));\n    setActiveTab('Decomposed'); // Automatically switch to Decomposed tab after processing\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [['Original', 'Decomposed'].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(tab),\n        style: {\n          padding: '10px',\n          margin: '0 5px',\n          backgroundColor: activeTab === tab ? '#007BFF' : '#ccc',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: tab\n      }, tab, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProcessCode,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Process Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      ref: editorRef,\n      mode: \"python\",\n      theme: \"monokai\",\n      name: \"code_editor\",\n      onChange: handleCodeChange,\n      value: buffers[activeTab] // Update value based on active tab\n      ,\n      width: \"100%\",\n      height: \"100vh\",\n      fontSize: 14,\n      setOptions: {\n        showLineNumbers: true,\n        tabSize: 4,\n        useWorker: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditorWithTabs, \"ebFTCn2Y/tIZSz7SxIRneTARJ6Y=\");\n_c = CodeEditorWithTabs;\nexport default CodeEditorWithTabs;\nvar _c;\n$RefreshReg$(_c, \"CodeEditorWithTabs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AceEditor","jsxDEV","_jsxDEV","CodeEditorWithTabs","_s","editorRef","buffers","setBuffers","Original","Decomposed","activeTab","setActiveTab","fetch","then","response","json","data","catch","error","console","handleCodeChange","newCode","prevBuffers","handleProcessCode","style","height","display","flexDirection","children","marginBottom","map","tab","onClick","padding","margin","backgroundColor","color","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","ref","mode","theme","name","onChange","value","width","fontSize","setOptions","showLineNumbers","tabSize","useWorker","_c","$RefreshReg$"],"sources":["/Users/jonathancook/Desktop/Research/dep-graph/src/components/CodeEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nconst CodeEditorWithTabs = () => {\n  const editorRef = useRef(null);\n\n  // State for the content of the two tabs\n  const [buffers, setBuffers] = useState({\n    Original: '',\n    Decomposed: '',\n  });\n\n  // Track the currently active tab\n  const [activeTab, setActiveTab] = useState('Original');\n\n  // Load code content from JSON on component mount\n  useEffect(() => {\n    fetch('/demoCode.json')\n      .then((response) => response.json())\n      .then((data) => {\n        setBuffers({\n          Original: data.Original,\n          Decomposed: '', // Initially empty; will be populated on processing\n        });\n      })\n      .catch((error) => console.error('Error loading demo code:', error));\n  }, []);\n\n  // Handle code change for the active tab\n  const handleCodeChange = (newCode) => {\n    setBuffers((prevBuffers) => ({\n      ...prevBuffers,\n      [activeTab]: newCode,\n    }));\n  };\n\n  // Handle Process Code button to populate the Decomposed tab\n  const handleProcessCode = () => {\n    setBuffers((prevBuffers) => ({\n      ...prevBuffers,\n      Decomposed: buffers.Decomposed || buffers.Original, // Use Decomposed content from JSON\n    }));\n    setActiveTab('Decomposed'); // Automatically switch to Decomposed tab after processing\n  };\n\n  return (\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\n      {/* Tab Navigation and Process Code Button */}\n      <div style={{ marginBottom: '10px' }}>\n        {['Original', 'Decomposed'].map((tab) => (\n          <button\n            key={tab}\n            onClick={() => setActiveTab(tab)}\n            style={{\n              padding: '10px',\n              margin: '0 5px',\n              backgroundColor: activeTab === tab ? '#007BFF' : '#ccc',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            {tab}\n          </button>\n        ))}\n        <button onClick={handleProcessCode} style={{ marginLeft: '10px' }}>\n          Process Code\n        </button>\n      </div>\n\n      {/* Ace Editor */}\n      <AceEditor\n        ref={editorRef}\n        mode=\"python\"\n        theme=\"monokai\"\n        name=\"code_editor\"\n        onChange={handleCodeChange}\n        value={buffers[activeTab]} // Update value based on active tab\n        width=\"100%\"\n        height=\"100vh\"\n        fontSize={14}\n        setOptions={{\n          showLineNumbers: true,\n          tabSize: 4,\n          useWorker: false,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditorWithTabs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}