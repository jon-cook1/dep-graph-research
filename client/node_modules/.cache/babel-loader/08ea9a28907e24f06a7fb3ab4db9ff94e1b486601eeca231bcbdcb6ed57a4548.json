{"ast":null,"code":"var _jsxFileName = \"/Users/jonathancook/Desktop/Research/dep-graph/src/components/GraphDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, useReactFlow } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { applyStyles } from '../utils/GraphUtils';\nimport ace from 'ace-builds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphDisplay = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  nodes: initialNodes,\n  edges: initialEdges,\n  order,\n  editorRef,\n  activeTab\n}, ref) => {\n  _s();\n  const [nodes, setNodesState, onNodesChange] = useNodesState([]);\n  const [edges, setEdgesState, onEdgesChange] = useEdgesState([]);\n  const {\n    fitView\n  } = useReactFlow();\n  const animationTimeoutRef = useRef([]);\n  const [coloringStarted, setColoringStarted] = useState(false);\n  const markerIdsRef = useRef([]);\n  const colorClassesRef = useRef(new Map());\n  const savedHighlightsRef = useRef([]); // Store cumulative original highlights\n  const savedDecompHighlightsRef = useRef([]); // Store cumulative decomposed highlights\n\n  const createColorClass = color => {\n    if (!colorClassesRef.current.has(color)) {\n      const className = `highlight-${color.replace('#', '')}`;\n      const style = document.createElement('style');\n      style.innerHTML = `\n          .${className} {\n            position: absolute;\n            background: ${color}40;\n            z-index: 20;\n          }\n        `;\n      document.head.appendChild(style);\n      colorClassesRef.current.set(color, className);\n    }\n    return colorClassesRef.current.get(color);\n  };\n  const applyCurrentHighlights = useCallback(() => {\n    if (editorRef.current && editorRef.current.editor) {\n      const session = editorRef.current.editor.getSession();\n      // Remove existing markers\n      markerIdsRef.current.forEach(markerId => session.removeMarker(markerId));\n      markerIdsRef.current = [];\n\n      // Determine highlights to apply based on active tab\n      const highlights = activeTab === 'Original' ? savedHighlightsRef.current : savedDecompHighlightsRef.current;\n\n      // Apply cumulative highlights\n      highlights.forEach(({\n        lineNumbers,\n        color\n      }) => {\n        const colorClass = createColorClass(color);\n        lineNumbers.forEach(line => {\n          const Range = ace.require('ace/range').Range;\n          const markerId = session.addMarker(new Range(line - 1, 0, line - 1, 1), colorClass, 'fullLine');\n          markerIdsRef.current.push(markerId);\n        });\n      });\n    }\n  }, [editorRef, activeTab]);\n  useEffect(() => {\n    if (initialNodes.length && initialEdges.length) {\n      const {\n        styledNodes,\n        styledEdges\n      } = applyStyles(initialNodes, initialEdges);\n      setNodesState(styledNodes);\n      setEdgesState(styledEdges);\n      fitView();\n    }\n  }, [initialNodes, initialEdges, setNodesState, setEdgesState, fitView]);\n  const runColorAnimation = useCallback(() => {\n    if (!order || !order.length) return;\n    animationTimeoutRef.current.forEach(clearTimeout);\n    animationTimeoutRef.current = [];\n    savedHighlightsRef.current = []; // Reset original highlights\n    savedDecompHighlightsRef.current = []; // Reset decomposed highlights\n\n    let delay = 0;\n    order.forEach(([id, color]) => {\n      animationTimeoutRef.current.push(setTimeout(() => {\n        setNodesState(nds => nds.map(node => {\n          if (node.id === id) {\n            // Add to cumulative highlights\n            if (node.code_lines) {\n              savedHighlightsRef.current.push({\n                lineNumbers: node.code_lines,\n                color\n              });\n            }\n            if (node.decomp_code_lines) {\n              savedDecompHighlightsRef.current.push({\n                lineNumbers: node.decomp_code_lines,\n                color\n              });\n            }\n\n            // Apply highlights immediately during each animation step\n            applyCurrentHighlights();\n            return {\n              ...node,\n              style: {\n                ...node.style,\n                background: color\n              }\n            };\n          }\n          return node;\n        }));\n        setEdgesState(eds => eds.map(edge => {\n          if (edge.id === id) {\n            return {\n              ...edge,\n              animated: true,\n              style: {\n                ...edge.style,\n                stroke: color,\n                strokeWidth: 6\n              }\n            };\n          }\n          return edge;\n        }));\n      }, delay));\n      delay += 500;\n    });\n  }, [order, setNodesState, setEdgesState, applyCurrentHighlights]);\n\n  // Use `useImperativeHandle` to expose `resetGraphColors` to parent component via `ref`\n  useImperativeHandle(ref, () => ({\n    resetGraphColors() {\n      animationTimeoutRef.current.forEach(clearTimeout);\n      animationTimeoutRef.current = [];\n      setNodesState(nds => nds.map(node => ({\n        ...node,\n        style: {\n          ...node.style,\n          background: '#D3D3D3'\n        }\n      })));\n      setEdgesState(eds => eds.map(edge => ({\n        ...edge,\n        style: {\n          ...edge.style,\n          stroke: '#D3D3D3'\n        }\n      })));\n      setColoringStarted(false);\n      if (editorRef.current && editorRef.current.editor && editorRef.current.editor.getSession()) {\n        const session = editorRef.current.editor.getSession();\n        markerIdsRef.current.forEach(markerId => session.removeMarker(markerId));\n        markerIdsRef.current = [];\n      }\n    }\n  }));\n\n  // Update editor highlights whenever activeTab changes\n  useEffect(() => {\n    applyCurrentHighlights();\n  }, [activeTab, applyCurrentHighlights]);\n  useEffect(() => {\n    if (nodes.length && edges.length && !coloringStarted) {\n      runColorAnimation();\n      setColoringStarted(true);\n    }\n  }, [nodes, edges, runColorAnimation, coloringStarted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-display\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 7\n  }, this);\n}, \"Xy1nppF8uusbv4XOG2ZMI0aW10U=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n})), \"Xy1nppF8uusbv4XOG2ZMI0aW10U=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n});\n_c2 = GraphDisplay;\nexport default GraphDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphDisplay$forwardRef\");\n$RefreshReg$(_c2, \"GraphDisplay\");","map":{"version":3,"names":["React","useEffect","useCallback","useRef","useState","forwardRef","useImperativeHandle","ReactFlow","useNodesState","useEdgesState","useReactFlow","applyStyles","ace","jsxDEV","_jsxDEV","GraphDisplay","_s","_c","nodes","initialNodes","edges","initialEdges","order","editorRef","activeTab","ref","setNodesState","onNodesChange","setEdgesState","onEdgesChange","fitView","animationTimeoutRef","coloringStarted","setColoringStarted","markerIdsRef","colorClassesRef","Map","savedHighlightsRef","savedDecompHighlightsRef","createColorClass","color","current","has","className","replace","style","document","createElement","innerHTML","head","appendChild","set","get","applyCurrentHighlights","editor","session","getSession","forEach","markerId","removeMarker","highlights","lineNumbers","colorClass","line","Range","require","addMarker","push","length","styledNodes","styledEdges","runColorAnimation","clearTimeout","delay","id","setTimeout","nds","map","node","code_lines","decomp_code_lines","background","eds","edge","animated","stroke","strokeWidth","resetGraphColors","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jonathancook/Desktop/Research/dep-graph/src/components/GraphDisplay.js"],"sourcesContent":["import React, { useEffect, useCallback, useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, useReactFlow } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { applyStyles } from '../utils/GraphUtils';\nimport ace from 'ace-builds';\n\nconst GraphDisplay = forwardRef(\n  ({ nodes: initialNodes, edges: initialEdges, order, editorRef, activeTab }, ref) => {\n    const [nodes, setNodesState, onNodesChange] = useNodesState([]);\n    const [edges, setEdgesState, onEdgesChange] = useEdgesState([]);\n    const { fitView } = useReactFlow();\n    const animationTimeoutRef = useRef([]);\n    const [coloringStarted, setColoringStarted] = useState(false);\n    const markerIdsRef = useRef([]);\n    const colorClassesRef = useRef(new Map());\n    const savedHighlightsRef = useRef([]); // Store cumulative original highlights\n    const savedDecompHighlightsRef = useRef([]); // Store cumulative decomposed highlights\n\n    const createColorClass = (color) => {\n      if (!colorClassesRef.current.has(color)) {\n        const className = `highlight-${color.replace('#', '')}`;\n        const style = document.createElement('style');\n        style.innerHTML = `\n          .${className} {\n            position: absolute;\n            background: ${color}40;\n            z-index: 20;\n          }\n        `;\n        document.head.appendChild(style);\n        colorClassesRef.current.set(color, className);\n      }\n      return colorClassesRef.current.get(color);\n    };\n\n    const applyCurrentHighlights = useCallback(() => {\n      if (editorRef.current && editorRef.current.editor) {\n        const session = editorRef.current.editor.getSession();\n        // Remove existing markers\n        markerIdsRef.current.forEach((markerId) => session.removeMarker(markerId));\n        markerIdsRef.current = [];\n\n        // Determine highlights to apply based on active tab\n        const highlights = activeTab === 'Original' ? savedHighlightsRef.current : savedDecompHighlightsRef.current;\n\n        // Apply cumulative highlights\n        highlights.forEach(({ lineNumbers, color }) => {\n          const colorClass = createColorClass(color);\n          lineNumbers.forEach((line) => {\n            const Range = ace.require('ace/range').Range;\n            const markerId = session.addMarker(new Range(line - 1, 0, line - 1, 1), colorClass, 'fullLine');\n            markerIdsRef.current.push(markerId);\n          });\n        });\n      }\n    }, [editorRef, activeTab]);\n\n    useEffect(() => {\n      if (initialNodes.length && initialEdges.length) {\n        const { styledNodes, styledEdges } = applyStyles(initialNodes, initialEdges);\n        setNodesState(styledNodes);\n        setEdgesState(styledEdges);\n        fitView();\n      }\n    }, [initialNodes, initialEdges, setNodesState, setEdgesState, fitView]);\n\n    const runColorAnimation = useCallback(() => {\n      if (!order || !order.length) return;\n\n      animationTimeoutRef.current.forEach(clearTimeout);\n      animationTimeoutRef.current = [];\n      savedHighlightsRef.current = []; // Reset original highlights\n      savedDecompHighlightsRef.current = []; // Reset decomposed highlights\n\n      let delay = 0;\n\n      order.forEach(([id, color]) => {\n        animationTimeoutRef.current.push(\n          setTimeout(() => {\n            setNodesState((nds) =>\n              nds.map((node) => {\n                if (node.id === id) {\n                  // Add to cumulative highlights\n                  if (node.code_lines) {\n                    savedHighlightsRef.current.push({ lineNumbers: node.code_lines, color });\n                  }\n                  if (node.decomp_code_lines) {\n                    savedDecompHighlightsRef.current.push({ lineNumbers: node.decomp_code_lines, color });\n                  }\n\n                  // Apply highlights immediately during each animation step\n                  applyCurrentHighlights();\n\n                  return {\n                    ...node,\n                    style: {\n                      ...node.style,\n                      background: color,\n                    },\n                  };\n                }\n                return node;\n              })\n            );\n\n            setEdgesState((eds) =>\n              eds.map((edge) => {\n                if (edge.id === id) {\n                  return {\n                    ...edge,\n                    animated: true,\n                    style: {\n                      ...edge.style,\n                      stroke: color,\n                      strokeWidth: 6,\n                    },\n                  };\n                }\n                return edge;\n              })\n            );\n          }, delay)\n        );\n\n        delay += 500;\n      });\n    }, [order, setNodesState, setEdgesState, applyCurrentHighlights]);\n\n    // Use `useImperativeHandle` to expose `resetGraphColors` to parent component via `ref`\n    useImperativeHandle(ref, () => ({\n      resetGraphColors() {\n        animationTimeoutRef.current.forEach(clearTimeout);\n        animationTimeoutRef.current = [];\n\n        setNodesState((nds) =>\n          nds.map((node) => ({\n            ...node,\n            style: {\n              ...node.style,\n              background: '#D3D3D3',\n            },\n          }))\n        );\n\n        setEdgesState((eds) =>\n          eds.map((edge) => ({\n            ...edge,\n            style: {\n              ...edge.style,\n              stroke: '#D3D3D3',\n            },\n          }))\n        );\n\n        setColoringStarted(false);\n\n        if (editorRef.current && editorRef.current.editor && editorRef.current.editor.getSession()) {\n          const session = editorRef.current.editor.getSession();\n          markerIdsRef.current.forEach((markerId) => session.removeMarker(markerId));\n          markerIdsRef.current = [];\n        }\n      },\n    }));\n\n    // Update editor highlights whenever activeTab changes\n    useEffect(() => {\n      applyCurrentHighlights();\n    }, [activeTab, applyCurrentHighlights]);\n\n    useEffect(() => {\n      if (nodes.length && edges.length && !coloringStarted) {\n        runColorAnimation();\n        setColoringStarted(true);\n      }\n    }, [nodes, edges, runColorAnimation, coloringStarted]);\n\n    return (\n      <div className=\"graph-display\">\n        <ReactFlow nodes={nodes} edges={edges} onNodesChange={onNodesChange} onEdgesChange={onEdgesChange} fitView />\n      </div>\n    );\n  }\n);\n\nexport default GraphDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}