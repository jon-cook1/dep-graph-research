{"ast":null,"code":"var _jsxFileName = \"/Users/jonathancook/Desktop/Research/dep-graph/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport ButtonPanel from './components/ButtonPanel';\nimport CodeEditor from './components/CodeEditor';\nimport GraphDisplay from './components/GraphDisplay';\nimport { ReactFlowProvider } from 'reactflow';\nimport { initialNodes, initialEdges, order } from './graphElements';\nimport initialCode from './initialCode.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [buffers, setBuffers] = useState({\n    Original: initialCode.Original,\n    Decomposed: '' // Always start with an empty Decomposed code\n  });\n  const [activeTab, setActiveTab] = useState('Original');\n  const [noColor, setNoColor] = useState(false);\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [codeProcessed, setCodeProcessed] = useState(false); // Track if code is processed\n  const [animationStarted, setAnimationStarted] = useState(false); // Track if animation is started\n  const editorRef = useRef(null);\n  const graphRef = useRef(null);\n  useEffect(() => {\n    const savedOriginal = localStorage.getItem('Original');\n    setBuffers(prevBuffers => ({\n      ...prevBuffers,\n      Original: savedOriginal || initialCode.Original,\n      Decomposed: ''\n    }));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('Original', buffers.Original);\n  }, [buffers.Original]);\n  const handleProcessCode = () => {\n    // Populate Decomposed code only when \"Process Code\" is clicked\n    const decomposedContent = initialCode.Decomposed;\n    setBuffers(prevBuffers => ({\n      ...prevBuffers,\n      Decomposed: decomposedContent\n    }));\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n    setCodeProcessed(true); // Enable additional buttons\n    setAnimationStarted(false); // Reset animation button text\n  };\n  const handleRunAnimation = () => {\n    if (graphRef.current) {\n      graphRef.current.resetGraphColors();\n      setAnimationStarted(true); // Set to true after starting animation\n    }\n  };\n  const handleToggleNoColor = () => {\n    setNoColor(prevNoColor => !prevNoColor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonPanel, {\n      onProcessCode: handleProcessCode,\n      onTabChange: setActiveTab,\n      activeTab: activeTab,\n      onRunAnimation: handleRunAnimation // Pass the animation handler\n      ,\n      onToggleNoColor: handleToggleNoColor,\n      codeProcessed: codeProcessed // Control visibility\n      ,\n      animationStarted: animationStarted // Control button text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-section\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          code: buffers[activeTab],\n          setCode: newCode => setBuffers(prevBuffers => ({\n            ...prevBuffers,\n            [activeTab]: newCode\n          })),\n          editorRef: editorRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n          children: /*#__PURE__*/_jsxDEV(GraphDisplay, {\n            ref: graphRef,\n            nodes: nodes,\n            edges: edges,\n            order: order,\n            editorRef: editorRef,\n            setNodes: setNodes,\n            setEdges: setEdges,\n            activeTab: activeTab,\n            noColor: noColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PAGNpptds++spHdRz+ecUWYNxok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ButtonPanel","CodeEditor","GraphDisplay","ReactFlowProvider","initialNodes","initialEdges","order","initialCode","jsxDEV","_jsxDEV","App","_s","buffers","setBuffers","Original","Decomposed","activeTab","setActiveTab","noColor","setNoColor","nodes","setNodes","edges","setEdges","codeProcessed","setCodeProcessed","animationStarted","setAnimationStarted","editorRef","graphRef","savedOriginal","localStorage","getItem","prevBuffers","setItem","handleProcessCode","decomposedContent","handleRunAnimation","current","resetGraphColors","handleToggleNoColor","prevNoColor","className","children","onProcessCode","onTabChange","onRunAnimation","onToggleNoColor","fileName","_jsxFileName","lineNumber","columnNumber","code","setCode","newCode","ref","_c","$RefreshReg$"],"sources":["/Users/jonathancook/Desktop/Research/dep-graph/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport ButtonPanel from './components/ButtonPanel';\nimport CodeEditor from './components/CodeEditor';\nimport GraphDisplay from './components/GraphDisplay';\nimport { ReactFlowProvider } from 'reactflow';\nimport { initialNodes, initialEdges, order } from './graphElements';\nimport initialCode from './initialCode.json';\n\nfunction App() {\n  const [buffers, setBuffers] = useState({\n    Original: initialCode.Original,\n    Decomposed: '', // Always start with an empty Decomposed code\n  });\n  const [activeTab, setActiveTab] = useState('Original');\n  const [noColor, setNoColor] = useState(false);\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [codeProcessed, setCodeProcessed] = useState(false); // Track if code is processed\n  const [animationStarted, setAnimationStarted] = useState(false); // Track if animation is started\n  const editorRef = useRef(null);\n  const graphRef = useRef(null);\n\n  useEffect(() => {\n    const savedOriginal = localStorage.getItem('Original');\n    setBuffers((prevBuffers) => ({\n      ...prevBuffers,\n      Original: savedOriginal || initialCode.Original,\n      Decomposed: '',\n    }));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('Original', buffers.Original);\n  }, [buffers.Original]);\n\n  const handleProcessCode = () => {\n    // Populate Decomposed code only when \"Process Code\" is clicked\n    const decomposedContent = initialCode.Decomposed;\n    setBuffers((prevBuffers) => ({\n      ...prevBuffers,\n      Decomposed: decomposedContent,\n    }));\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n    setCodeProcessed(true); // Enable additional buttons\n    setAnimationStarted(false); // Reset animation button text\n  };\n\n  const handleRunAnimation = () => {\n    if (graphRef.current) {\n      graphRef.current.resetGraphColors();\n      setAnimationStarted(true); // Set to true after starting animation\n    }\n  };\n\n  const handleToggleNoColor = () => {\n    setNoColor((prevNoColor) => !prevNoColor);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <ButtonPanel\n        onProcessCode={handleProcessCode}\n        onTabChange={setActiveTab}\n        activeTab={activeTab}\n        onRunAnimation={handleRunAnimation} // Pass the animation handler\n        onToggleNoColor={handleToggleNoColor}\n        codeProcessed={codeProcessed} // Control visibility\n        animationStarted={animationStarted} // Control button text\n      />\n\n      <div className=\"content-container\">\n        <div className=\"editor-section\">\n          <CodeEditor\n            code={buffers[activeTab]}\n            setCode={(newCode) =>\n              setBuffers((prevBuffers) => ({\n                ...prevBuffers,\n                [activeTab]: newCode,\n              }))\n            }\n            editorRef={editorRef}\n          />\n        </div>\n\n        <div className=\"graph-section\">\n          <ReactFlowProvider>\n            <GraphDisplay\n              ref={graphRef}\n              nodes={nodes}\n              edges={edges}\n              order={order}\n              editorRef={editorRef}\n              setNodes={setNodes}\n              setEdges={setEdges}\n              activeTab={activeTab}\n              noColor={noColor}\n            />\n          </ReactFlowProvider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}