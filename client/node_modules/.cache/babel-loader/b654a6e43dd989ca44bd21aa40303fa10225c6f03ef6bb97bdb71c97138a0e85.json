{"ast":null,"code":"var _jsxFileName = \"/Users/jonathancook/Desktop/Research/dep-graph/src/components/GraphDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, useReactFlow } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { applyStyles } from '../utils/GraphUtils';\nimport ace from 'ace-builds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphDisplay = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  nodes: initialNodes,\n  edges: initialEdges,\n  order,\n  editorRef,\n  activeTab,\n  noColor\n}, ref) => {\n  _s();\n  const [nodes, setNodesState, onNodesChange] = useNodesState([]);\n  const [edges, setEdgesState, onEdgesChange] = useEdgesState([]);\n  const {\n    fitView\n  } = useReactFlow();\n  const animationTimeoutRef = useRef([]);\n  const activeTabRef = useRef(activeTab);\n  const noColorRef = useRef(noColor);\n  const [coloringStarted, setColoringStarted] = useState(false);\n  const markerIdsRef = useRef([]);\n  const colorClassesRef = useRef(new Map());\n  const savedHighlightsRef = useRef([]);\n  const savedDecompHighlightsRef = useRef([]);\n  const temporaryHighlightsRef = useRef([]); // Temporary highlights for clicked nodes\n\n  const createColorClass = color => {\n    if (!colorClassesRef.current.has(color)) {\n      const className = `highlight-${color.replace('#', '')}`;\n      const style = document.createElement('style');\n      style.innerHTML = `\n          .${className} {\n            position: absolute;\n            background: ${color}40;\n            z-index: 20;\n          }\n        `;\n      document.head.appendChild(style);\n      colorClassesRef.current.set(color, className);\n    }\n    return colorClassesRef.current.get(color);\n  };\n  const createEmphasisClass = () => {\n    if (!colorClassesRef.current.has('emphasis')) {\n      const style = document.createElement('style');\n      style.innerHTML = `\n          .ace-emphasis-line {\n            font-weight: bold;\n            background-color: rgba(255, 191, 0, 0.3) !important;\n          }\n          .ace_gutter-cell.ace-emphasis {\n            font-weight: bold;\n            background-color: rgba(255, 191, 0, 0.3);\n          }\n        `;\n      document.head.appendChild(style);\n      colorClassesRef.current.set('emphasis', 'ace-emphasis-line');\n    }\n    return colorClassesRef.current.get('emphasis');\n  };\n  const clearHighlights = useCallback(() => {\n    if (editorRef.current && editorRef.current.editor) {\n      const session = editorRef.current.editor.getSession();\n      markerIdsRef.current.forEach(markerId => session.removeMarker(markerId));\n      markerIdsRef.current = [];\n    }\n  }, [editorRef]);\n  const applyHighlights = useCallback((highlights, useEmphasis = false) => {\n    if (editorRef.current && editorRef.current.editor) {\n      const session = editorRef.current.editor.getSession();\n      markerIdsRef.current.forEach(markerId => session.removeMarker(markerId));\n      markerIdsRef.current = [];\n      highlights.forEach(({\n        lineNumbers,\n        color\n      }) => {\n        const colorClass = useEmphasis ? createEmphasisClass() : createColorClass(color);\n        lineNumbers.forEach(line => {\n          const Range = ace.require('ace/range').Range;\n          const markerId = session.addMarker(new Range(line - 1, 0, line - 1, 1), colorClass, 'fullLine');\n          markerIdsRef.current.push(markerId);\n        });\n      });\n    }\n  }, [editorRef]);\n  const applyHighlightsForTab = useCallback(currentTab => {\n    if (noColorRef.current) {\n      clearHighlights();\n      return;\n    }\n    const highlights = currentTab === 'Original' ? savedHighlightsRef.current : savedDecompHighlightsRef.current;\n    applyHighlights(highlights.concat(temporaryHighlightsRef.current));\n  }, [applyHighlights, clearHighlights]);\n  const handleNodeClick = useCallback(node => {\n    const highlights = activeTabRef.current === 'Original' ? node.code_lines : node.decomp_code_lines;\n    if (highlights) {\n      temporaryHighlightsRef.current = [{\n        lineNumbers: highlights,\n        color: '#ffbf00'\n      }];\n      applyHighlights(temporaryHighlightsRef.current, true); // Apply emphasis style\n    }\n  }, [applyHighlights]);\n  useEffect(() => {\n    if (initialNodes.length && initialEdges.length) {\n      const {\n        styledNodes,\n        styledEdges\n      } = applyStyles(initialNodes, initialEdges);\n      setNodesState(styledNodes);\n      setEdgesState(styledEdges);\n      fitView();\n    }\n  }, [initialNodes, initialEdges, setNodesState, setEdgesState, fitView]);\n  const runColorAnimation = useCallback(() => {\n    if (!order || !order.length) return;\n    animationTimeoutRef.current.forEach(clearTimeout);\n    animationTimeoutRef.current = [];\n    savedHighlightsRef.current = [];\n    savedDecompHighlightsRef.current = [];\n    temporaryHighlightsRef.current = []; // Clear temporary highlights\n\n    let delay = 500;\n    order.forEach(([id, color]) => {\n      animationTimeoutRef.current.push(setTimeout(() => {\n        setNodesState(nds => nds.map(node => {\n          if (node.id === id) {\n            if (node.code_lines) {\n              savedHighlightsRef.current.push({\n                lineNumbers: node.code_lines,\n                color\n              });\n            }\n            if (node.decomp_code_lines) {\n              savedDecompHighlightsRef.current.push({\n                lineNumbers: node.decomp_code_lines,\n                color\n              });\n            }\n            if (!noColorRef.current) {\n              applyHighlightsForTab(activeTabRef.current);\n            } else {\n              clearHighlights();\n            }\n            return {\n              ...node,\n              style: {\n                ...node.style,\n                background: color\n              }\n            };\n          }\n          return node;\n        }));\n        setEdgesState(eds => eds.map(edge => {\n          if (edge.id === id) {\n            return {\n              ...edge,\n              animated: true,\n              style: {\n                ...edge.style,\n                stroke: color,\n                strokeWidth: 6\n              }\n            };\n          }\n          return edge;\n        }));\n      }, delay));\n      delay += 500;\n    });\n  }, [order, setNodesState, setEdgesState, applyHighlightsForTab, clearHighlights]);\n  useImperativeHandle(ref, () => ({\n    resetGraphColors() {\n      animationTimeoutRef.current.forEach(clearTimeout);\n      animationTimeoutRef.current = [];\n      setNodesState(nds => nds.map(node => ({\n        ...node,\n        style: {\n          ...node.style,\n          background: '#D3D3D3'\n        }\n      })));\n      setEdgesState(eds => eds.map(edge => ({\n        ...edge,\n        style: {\n          ...edge.style,\n          stroke: '#D3D3D3'\n        }\n      })));\n      setColoringStarted(false);\n      clearHighlights();\n    }\n  }));\n  useEffect(() => {\n    activeTabRef.current = activeTab;\n    applyHighlightsForTab(activeTab);\n  }, [activeTab, applyHighlightsForTab]);\n  useEffect(() => {\n    if (nodes.length && edges.length && !coloringStarted) {\n      runColorAnimation();\n      setColoringStarted(true);\n    }\n  }, [nodes, edges, runColorAnimation, coloringStarted]);\n  useEffect(() => {\n    noColorRef.current = noColor;\n    if (noColor) {\n      clearHighlights();\n    } else {\n      applyHighlightsForTab(activeTab);\n    }\n  }, [noColor, applyHighlightsForTab, clearHighlights, activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-display\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true,\n      onNodeClick: (_, node) => handleNodeClick(node) // Add node click handler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 7\n  }, this);\n}, \"bOL3FJIbyM6eUn0mSqTUh9Jq8fc=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n})), \"bOL3FJIbyM6eUn0mSqTUh9Jq8fc=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n});\n_c2 = GraphDisplay;\nexport default GraphDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphDisplay$forwardRef\");\n$RefreshReg$(_c2, \"GraphDisplay\");","map":{"version":3,"names":["React","useEffect","useCallback","useRef","useState","forwardRef","useImperativeHandle","ReactFlow","useNodesState","useEdgesState","useReactFlow","applyStyles","ace","jsxDEV","_jsxDEV","GraphDisplay","_s","_c","nodes","initialNodes","edges","initialEdges","order","editorRef","activeTab","noColor","ref","setNodesState","onNodesChange","setEdgesState","onEdgesChange","fitView","animationTimeoutRef","activeTabRef","noColorRef","coloringStarted","setColoringStarted","markerIdsRef","colorClassesRef","Map","savedHighlightsRef","savedDecompHighlightsRef","temporaryHighlightsRef","createColorClass","color","current","has","className","replace","style","document","createElement","innerHTML","head","appendChild","set","get","createEmphasisClass","clearHighlights","editor","session","getSession","forEach","markerId","removeMarker","applyHighlights","highlights","useEmphasis","lineNumbers","colorClass","line","Range","require","addMarker","push","applyHighlightsForTab","currentTab","concat","handleNodeClick","node","code_lines","decomp_code_lines","length","styledNodes","styledEdges","runColorAnimation","clearTimeout","delay","id","setTimeout","nds","map","background","eds","edge","animated","stroke","strokeWidth","resetGraphColors","children","onNodeClick","_","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jonathancook/Desktop/Research/dep-graph/src/components/GraphDisplay.js"],"sourcesContent":["import React, { useEffect, useCallback, useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, useReactFlow } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { applyStyles } from '../utils/GraphUtils';\nimport ace from 'ace-builds';\n\nconst GraphDisplay = forwardRef(\n  ({ nodes: initialNodes, edges: initialEdges, order, editorRef, activeTab, noColor }, ref) => {\n    const [nodes, setNodesState, onNodesChange] = useNodesState([]);\n    const [edges, setEdgesState, onEdgesChange] = useEdgesState([]);\n    const { fitView } = useReactFlow();\n    const animationTimeoutRef = useRef([]);\n    const activeTabRef = useRef(activeTab);\n    const noColorRef = useRef(noColor);\n    const [coloringStarted, setColoringStarted] = useState(false);\n    const markerIdsRef = useRef([]);\n    const colorClassesRef = useRef(new Map());\n    const savedHighlightsRef = useRef([]);\n    const savedDecompHighlightsRef = useRef([]);\n    const temporaryHighlightsRef = useRef([]); // Temporary highlights for clicked nodes\n\n    const createColorClass = (color) => {\n      if (!colorClassesRef.current.has(color)) {\n        const className = `highlight-${color.replace('#', '')}`;\n        const style = document.createElement('style');\n        style.innerHTML = `\n          .${className} {\n            position: absolute;\n            background: ${color}40;\n            z-index: 20;\n          }\n        `;\n        document.head.appendChild(style);\n        colorClassesRef.current.set(color, className);\n      }\n      return colorClassesRef.current.get(color);\n    };\n\n    const createEmphasisClass = () => {\n      if (!colorClassesRef.current.has('emphasis')) {\n        const style = document.createElement('style');\n        style.innerHTML = `\n          .ace-emphasis-line {\n            font-weight: bold;\n            background-color: rgba(255, 191, 0, 0.3) !important;\n          }\n          .ace_gutter-cell.ace-emphasis {\n            font-weight: bold;\n            background-color: rgba(255, 191, 0, 0.3);\n          }\n        `;\n        document.head.appendChild(style);\n        colorClassesRef.current.set('emphasis', 'ace-emphasis-line');\n      }\n      return colorClassesRef.current.get('emphasis');\n    };\n\n    const clearHighlights = useCallback(() => {\n      if (editorRef.current && editorRef.current.editor) {\n        const session = editorRef.current.editor.getSession();\n        markerIdsRef.current.forEach((markerId) => session.removeMarker(markerId));\n        markerIdsRef.current = [];\n      }\n    }, [editorRef]);\n\n    const applyHighlights = useCallback(\n      (highlights, useEmphasis = false) => {\n        if (editorRef.current && editorRef.current.editor) {\n          const session = editorRef.current.editor.getSession();\n          markerIdsRef.current.forEach((markerId) => session.removeMarker(markerId));\n          markerIdsRef.current = [];\n\n          highlights.forEach(({ lineNumbers, color }) => {\n            const colorClass = useEmphasis ? createEmphasisClass() : createColorClass(color);\n            lineNumbers.forEach((line) => {\n              const Range = ace.require('ace/range').Range;\n              const markerId = session.addMarker(new Range(line - 1, 0, line - 1, 1), colorClass, 'fullLine');\n              markerIdsRef.current.push(markerId);\n            });\n          });\n        }\n      },\n      [editorRef]\n    );\n\n    const applyHighlightsForTab = useCallback(\n      (currentTab) => {\n        if (noColorRef.current) {\n          clearHighlights();\n          return;\n        }\n\n        const highlights = currentTab === 'Original' ? savedHighlightsRef.current : savedDecompHighlightsRef.current;\n        applyHighlights(highlights.concat(temporaryHighlightsRef.current));\n      },\n      [applyHighlights, clearHighlights]\n    );\n\n    const handleNodeClick = useCallback(\n      (node) => {\n        const highlights = activeTabRef.current === 'Original' ? node.code_lines : node.decomp_code_lines;\n        if (highlights) {\n          temporaryHighlightsRef.current = [{ lineNumbers: highlights, color: '#ffbf00' }];\n          applyHighlights(temporaryHighlightsRef.current, true); // Apply emphasis style\n        }\n      },\n      [applyHighlights]\n    );\n\n    useEffect(() => {\n      if (initialNodes.length && initialEdges.length) {\n        const { styledNodes, styledEdges } = applyStyles(initialNodes, initialEdges);\n        setNodesState(styledNodes);\n        setEdgesState(styledEdges);\n        fitView();\n      }\n    }, [initialNodes, initialEdges, setNodesState, setEdgesState, fitView]);\n\n    const runColorAnimation = useCallback(() => {\n      if (!order || !order.length) return;\n\n      animationTimeoutRef.current.forEach(clearTimeout);\n      animationTimeoutRef.current = [];\n      savedHighlightsRef.current = [];\n      savedDecompHighlightsRef.current = [];\n      temporaryHighlightsRef.current = []; // Clear temporary highlights\n\n      let delay = 500;\n\n      order.forEach(([id, color]) => {\n        animationTimeoutRef.current.push(\n          setTimeout(() => {\n            setNodesState((nds) =>\n              nds.map((node) => {\n                if (node.id === id) {\n                  if (node.code_lines) {\n                    savedHighlightsRef.current.push({ lineNumbers: node.code_lines, color });\n                  }\n                  if (node.decomp_code_lines) {\n                    savedDecompHighlightsRef.current.push({ lineNumbers: node.decomp_code_lines, color });\n                  }\n\n                  if (!noColorRef.current) {\n                    applyHighlightsForTab(activeTabRef.current);\n                  } else {\n                    clearHighlights();\n                  }\n\n                  return {\n                    ...node,\n                    style: {\n                      ...node.style,\n                      background: color,\n                    },\n                  };\n                }\n                return node;\n              })\n            );\n\n            setEdgesState((eds) =>\n              eds.map((edge) => {\n                if (edge.id === id) {\n                  return {\n                    ...edge,\n                    animated: true,\n                    style: {\n                      ...edge.style,\n                      stroke: color,\n                      strokeWidth: 6,\n                    },\n                  };\n                }\n                return edge;\n              })\n            );\n          }, delay)\n        );\n\n        delay += 500;\n      });\n    }, [order, setNodesState, setEdgesState, applyHighlightsForTab, clearHighlights]);\n\n    useImperativeHandle(ref, () => ({\n      resetGraphColors() {\n        animationTimeoutRef.current.forEach(clearTimeout);\n        animationTimeoutRef.current = [];\n\n        setNodesState((nds) =>\n          nds.map((node) => ({\n            ...node,\n            style: {\n              ...node.style,\n              background: '#D3D3D3',\n            },\n          }))\n        );\n\n        setEdgesState((eds) =>\n          eds.map((edge) => ({\n            ...edge,\n            style: {\n              ...edge.style,\n              stroke: '#D3D3D3',\n            },\n          }))\n        );\n\n        setColoringStarted(false);\n\n        clearHighlights();\n      },\n    }));\n\n    useEffect(() => {\n      activeTabRef.current = activeTab;\n      applyHighlightsForTab(activeTab);\n    }, [activeTab, applyHighlightsForTab]);\n\n    useEffect(() => {\n      if (nodes.length && edges.length && !coloringStarted) {\n        runColorAnimation();\n        setColoringStarted(true);\n      }\n    }, [nodes, edges, runColorAnimation, coloringStarted]);\n\n    useEffect(() => {\n      noColorRef.current = noColor;\n      if (noColor) {\n        clearHighlights();\n      } else {\n        applyHighlightsForTab(activeTab);\n      }\n    }, [noColor, applyHighlightsForTab, clearHighlights, activeTab]);\n\n    return (\n      <div className=\"graph-display\">\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          fitView\n          onNodeClick={(_, node) => handleNodeClick(node)} // Add node click handler\n        />\n      </div>\n    );\n  }\n);\n\nexport default GraphDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}